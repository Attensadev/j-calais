#labels Featured,Phase-Implementation
# j-calais -- User Guide

= Usage =

==Setup the client==

{{{
    CalaisClient client = new CalaisRestClient("OpenCalais API key");
}}}

==Analyze texts==

You can analyze a text fragment from a `String`:

{{{
    CalaisResponse response = client.analyze("Text to analyze");
}}}

From a `URL`:

{{{
    CalaisResponse response = client.analyze(new URL("http://example.com/sample.html"));
}}}

Or from any `Readable`

{{{
    CalaisResponse response = client.analyze(new FileReader("sample.txt"));
}}}

==Configure options==

You can also configure OpenCalais input parameters using `CalaisConfig` class

{{{
    CalaisConfig config = new CalaisConfig();
    config.set(CalaisConfig.UserParam.EXTERNAL_ID, url.toString());
    config.set(CalaisConfig.ProcessingParam.CONTENT_TYPE, "TEXT/HTML")
}}}

==Work with the results==

Display recognized entities:

{{{
    for (CalaisObject entity : response.getEntities()) {
      System.out.println(entity.getField("_type") + ":" 
                         + entity.getField("name"));
    }
}}}


Display topics: 

{{{
    for (CalaisObject topic : response.getTopics()) {
      System.out.println(topic.getField("categoryName"));
    }
}}}
