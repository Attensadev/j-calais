#labels Featured,Phase-Implementation
# j-calais -- User Guide

== Usage ==

===Setup the client===

{{{
    CalaisClient client = new CalaisRestClient("OpenCalais API key");
}}}

===Analyze texts===

You can analyze a text fragment from a `String`:

{{{
    CalaisResponse response = client.analyze("Text to analyze");
}}}

From a `URL`:

{{{
    CalaisResponse response = client.analyze(new URL("http://example.com/sample.html"));
}}}

Or from any `Readable`

{{{
    CalaisResponse response = client.analyze(new FileReader("sample.txt"));
}}}

===Configure options===

You can configure OpenCalais [http://www.opencalais.com/documentation/calais-web-service-api/forming-api-calls/input-parameters input parameters] using `CalaisConfig` class

{{{
    CalaisConfig config = new CalaisConfig();
    config.set(CalaisConfig.UserParam.EXTERNAL_ID, "User generated ID");
    config.set(CalaisConfig.ProcessingParam.CALCULATE_RELEVANCE_SCORE, "true");
}}}

And call any of the `analyze` methods

{{{
    CalaisResponse response = client.analyze("Text to analyze", config);
}}}

===Work with the results===

Display recognized entities:

{{{
    for (CalaisObject entity : response.getEntities()) {
      System.out.println(entity.getField("_type") + ":" 
                         + entity.getField("name"));
    }
}}}


Display topics: 

{{{
    for (CalaisObject topic : response.getTopics()) {
      System.out.println(topic.getField("categoryName"));
    }
}}}